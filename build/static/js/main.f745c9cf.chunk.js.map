{"version":3,"sources":["components/Home/Home.js","components/Header/Header.js","actions/types.js","http-common.js","services/vehicle-service.js","components/PlaceInteractions/PlaceInteraction.js","actions/vehicle-operations.js","components/VehicleActivity/VehicleActivity.js","router/Router.js","App.js","reportWebVitals.js","reducers/vehicle-operations.js","reducers/index.js","store.js","index.js"],"names":["Home","Container","Typography","variant","useStyles","makeStyles","list","width","textAlign","listItem","padding","display","linkStyle","color","textDecoration","Header","classes","AppBar","position","Toolbar","className","List","component","ListItem","to","activeClassName","exact","RETRIEVE_ALL_VEHICLE_INTERACTIONS","RETRIEVE_VEHICLE_INTERACTIONS_BY_DATE","RETRIEVE_ALL_VEHICLE_ACTIVITY","RETRIEVE_VEHICLE_ACTIVITY_LIC_AND_DATE","instance","axios","create","baseURL","headers","http","get","startDate","endDate","license","columns","id","label","minWidth","theme","root","cells","container","marginTop","form","flexWrap","textField","marginLeft","spacing","marginRight","button","margin","PlaceInteraction","useState","page","setPage","rowsPerPage","setRowsPerPage","isFormValid","setIsFormValid","setStartDate","setEndDate","vehicleOperations","useSelector","state","dispatch","useDispatch","useEffect","a","VehicleDataService","getAllPlaceInteractions","response","type","payload","data","console","log","noValidate","TextField","error","name","value","onChange","e","target","InputLabelProps","shrink","Button","onClick","getPlaceInteractionsByDate","retriveVehicleInteractionsByDate","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","align","style","TableBody","slice","vehicleOperation","index","hover","role","tabIndex","TablePagination","rowsPerPageOptions","count","length","onPageChange","event","newPage","onRowsPerPageChange","VehicleActivity","setLicense","getAllVehicleActivity","getVehicleActivityByLicenseAndDate","retriveVehicleActivityByLicAndDate","Router","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","vehicleOperationReducer","action","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f745c9cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Home.scss';\r\nimport { Container, Typography } from '@material-ui/core';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container>        \r\n            <Typography variant=\"h2\">Vehicle Activity and Interactions Tracking</Typography>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Header.scss';\r\nimport { Container, AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: '100%',\r\n        textAlign: 'right'\r\n    },\r\n    listItem: {\r\n        padding: '0 10px',\r\n        display: 'inline'\r\n    },\r\n    linkStyle: {\r\n        color: '#ccc',\r\n        textDecoration: 'none'\r\n    },\r\n});\r\n\r\nconst Header = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <AppBar position=\"static\" color=\"primary\">\r\n            <Container>\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" color=\"inherit\" className=\"navbar-brand\">Vehicle Tracking</Typography>\r\n                    <List component=\"ul\" className = { classes.list } aria-label=\"\">\r\n                        <ListItem className = { classes.listItem }>\r\n                            <NavLink to = \"/\" className = { classes.linkStyle } activeClassName = \"active\" exact>Home</NavLink>\r\n                        </ListItem>\r\n                        <ListItem className = { classes.listItem }>\r\n                            <NavLink to = \"/place_interactions/\" className = { classes.linkStyle } activeClassName = \"active\">Place Interactions</NavLink>\r\n                        </ListItem>\r\n                        <ListItem className = { classes.listItem }>\r\n                            <NavLink to = \"/vehicle_activity/\" className = { classes.linkStyle } activeClassName = \"active\">Vehicle Activity</NavLink>\r\n                        </ListItem>\r\n                    </List>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;","//export const CREATE_VEHICLE_OPS = \"CREATE_VEHICLE_OPS\";\r\n//export const UPDATE_VEHICLE_OPS = \"UPDATE_VEHICLE_OPS\";\r\n//export const DELETE_VEHICLE_OPS = \"DELETE_VEHICLE_OPS\";\r\n//export const DELETE_ALL_VEHICLE_OPS = \"DELETE_ALL_VEHICLE_OPS\";\r\nexport const RETRIEVE_ALL_VEHICLE_INTERACTIONS = \"RETRIEVE_ALL_VEHICLE_INTERACTIONS\";\r\nexport const RETRIEVE_VEHICLE_INTERACTIONS_BY_DATE = \"RETRIEVE_VEHICLE_INTERACTIONS_BY_DATE\";\r\nexport const RETRIEVE_ALL_VEHICLE_ACTIVITY = \"RETRIEVE_ALL_VEHICLE_ACTIVITY\";\r\nexport const RETRIEVE_VEHICLE_ACTIVITY_LIC_AND_DATE = \"RETRIEVE_VEHICLE_ACTIVITY_LIC_AND_DATE\";\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    //baseURL:'http://localhost:4000/api',\r\n    baseURL:'https://vehicle-node-backend.herokuapp.com/api',\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n})\r\n\r\nexport default instance;","import http from '../http-common';\r\n\r\nclass VehicleDataService {\r\n    getAllPlaceInteractions() {\r\n        return http.get('/place_interactions/');\r\n    }\r\n    getPlaceInteractionsByDate(startDate, endDate) {\r\n        return http.get(`/place_interactions?start_tis=${startDate}&end_tis=${endDate}`)\r\n    }\r\n    getAllVehicleActivity() {\r\n        return http.get('/vehicle_activity/');\r\n    }\r\n    getVehicleActivityByLicenseAndDate(license, startDate, endDate) {\r\n        return http.get(`/vehicle_activity?license=${license}&start_tis=${startDate}&end_tis=${endDate}`)\r\n    }\r\n}\r\n\r\nexport default new VehicleDataService();","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/textField';\r\nimport Paper from '@material-ui/core/paper';\r\nimport Table from '@material-ui/core/table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { \r\n    retriveAllVehicleInteractions,\r\n    retriveVehicleInteractionsByDate\r\n} from '../../actions/vehicle-operations';\r\n\r\nconst columns = [\r\n    { id: 'vehicle_license', label: 'License Number', minWidth: 200 },\r\n    { id: 'time', label: 'Time', minWidth: 200 },\r\n    { id: 'latitude', label: 'Latitude', minWidth: 200 },\r\n    { id: 'longitude', label: 'Longitude', minWidth: 200 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    cells: {\r\n        textAlign: 'center',\r\n    },\r\n    container: {\r\n        marginTop: '30px'\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginTop: '20px'\r\n    },\r\n    textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n    },\r\n    button: {\r\n        margin: '10px 0 0 10px'\r\n    }\r\n}));\r\n\r\nconst PlaceInteraction = () => {\r\n    const [currentVehicleInteraction, setCurrentVehicleInteraction] = useState(null),\r\n        [currentIndex, setCurrentIndex] = useState(-1),\r\n        [page, setPage] = useState(0),\r\n        [rowsPerPage, setRowsPerPage] = useState(10),\r\n        [isFormValid, setIsFormValid] = useState(false),\r\n        [startDate, setStartDate] = useState(\"\"),\r\n        [endDate, setEndDate] = useState(\"\"),\r\n        vehicleOperations = useSelector(state => state.vehicleOperations),\r\n        dispatch = useDispatch(),\r\n        classes = useStyles();\r\n  \r\n    useEffect(() => {\r\n      dispatch(retriveAllVehicleInteractions());\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n      };\r\n\r\n      const onChangeStartDate = e => {\r\n        const startDate = e.target.value;\r\n        setStartDate(startDate);\r\n      };\r\n\r\n      const onChangeEndDate = e => {\r\n        const endDate = e.target.value;\r\n        setEndDate(endDate);\r\n      };\r\n\r\n    const searchPlaceInteractions = () => {\r\n        if(startDate !== \"\" && endDate !== \"\") {\r\n            setIsFormValid(false);\r\n            dispatch(retriveVehicleInteractionsByDate(startDate, endDate));\r\n        } else {\r\n            setIsFormValid(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" color=\"inherit\">Place Interactions</Typography>\r\n            <form className={classes.form} noValidate>\r\n            <TextField\r\n                error={isFormValid}\r\n                id=\"date1\"\r\n                name=\"startDate\"\r\n                label=\"Start Date\"\r\n                type=\"date\"\r\n                className={classes.textField}\r\n                value={startDate}\r\n                onChange={onChangeStartDate}\r\n                InputLabelProps={{\r\n                shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                error={isFormValid}\r\n                id=\"date2\"\r\n                name=\"endDate\"\r\n                label=\"End Date\"\r\n                type=\"date\"\r\n                className={classes.textField}\r\n                value={endDate}\r\n                onChange={onChangeEndDate}\r\n                InputLabelProps={{\r\n                shrink: true,\r\n                }}\r\n            />\r\n            <Button name=\"search-button\" variant=\"contained\" color=\"primary\" className = { classes.button } onClick={searchPlaceInteractions}>Search</Button>\r\n            </form>\r\n            <Paper className = { classes.container }>\r\n                <TableContainer className= { classes.root }>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                        {columns.map((column) => (\r\n                            <TableCell\r\n                            className = { classes.cells }\r\n                            key={column.id}\r\n                            align={ column.align }\r\n                            style={{ minWidth: column.minWidth }}\r\n                            >\r\n                            {column.label}\r\n                            </TableCell>\r\n                        ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {vehicleOperations.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((vehicleOperation, index) => {\r\n                        return (\r\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={vehicleOperation.id}>\r\n                            {columns.map((column) => {\r\n                                const value = vehicleOperation[column.id];\r\n                                return (\r\n                                <TableCell  className = { classes.cells } key = { column.id} align = { column.align }>\r\n                                    { value }\r\n                                </TableCell>\r\n                                );\r\n                            })}\r\n                            </TableRow>\r\n                        );\r\n                        })}\r\n                    </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={vehicleOperations.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlaceInteraction;\r\n\r\n","import { \r\n    RETRIEVE_ALL_VEHICLE_INTERACTIONS,\r\n    RETRIEVE_VEHICLE_INTERACTIONS_BY_DATE,\r\n    RETRIEVE_ALL_VEHICLE_ACTIVITY,\r\n    RETRIEVE_VEHICLE_ACTIVITY_LIC_AND_DATE\r\n} from './types';\r\n\r\nimport VehicleDataService from '../services/vehicle-service';\r\n\r\nexport const retriveAllVehicleInteractions = () => async(dispatch) => {\r\n    try {\r\n        const response = await VehicleDataService.getAllPlaceInteractions();\r\n\r\n        dispatch({\r\n            type:  RETRIEVE_ALL_VEHICLE_INTERACTIONS,\r\n            payload: response.data\r\n        });\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const retriveVehicleInteractionsByDate = (startDate, endDate) => async(dispatch) => {\r\n    try {\r\n        const response = await VehicleDataService.getPlaceInteractionsByDate(startDate, endDate);\r\n\r\n        dispatch({\r\n            type: RETRIEVE_VEHICLE_INTERACTIONS_BY_DATE,\r\n            payload: response.data\r\n        });\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const retriveAllVehicleActivity = () => async(dispatch) => {\r\n    try {\r\n        const response = await VehicleDataService.getAllVehicleActivity();\r\n        dispatch({\r\n            type: RETRIEVE_ALL_VEHICLE_ACTIVITY,\r\n            payload: response.data\r\n        });\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const retriveVehicleActivityByLicAndDate = (license, startDate, endDate) => async(dispatch) => {\r\n    try {\r\n        const response = await VehicleDataService.getVehicleActivityByLicenseAndDate(license, startDate, endDate);\r\n\r\n        dispatch({\r\n            type: RETRIEVE_VEHICLE_ACTIVITY_LIC_AND_DATE,\r\n            payload: response.data\r\n        });\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/textField';\r\nimport Paper from '@material-ui/core/paper';\r\nimport Table from '@material-ui/core/table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withGoogleMap, GoogleMap, Marker, InfoWindow, Polyline } from 'react-google-maps';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { \r\n    retriveAllVehicleActivity,\r\n    retriveVehicleActivityByLicAndDate\r\n} from '../../actions/vehicle-operations';\r\n\r\nconst columns = [\r\n    { id: 'vehicle_license', label: 'License Number', minWidth: 200 },\r\n    { id: 'time', label: 'Time', minWidth: 200 },\r\n    { id: 'latitude', label: 'Latitude', minWidth: 200 },\r\n    { id: 'longitude', label: 'Longitude', minWidth: 200 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    cells: {\r\n        textAlign: 'center',\r\n    },\r\n    container: {\r\n        marginTop: '30px'\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginTop: '20px'\r\n    },\r\n    textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n    },\r\n    button: {\r\n        margin: '10px 0 0 10px'\r\n    }\r\n}));\r\n\r\nconst VehicleActivity = () => {\r\n    const [currentVehicleInteraction, setCurrentVehicleInteraction] = useState(null),\r\n        [currentIndex, setCurrentIndex] = useState(-1),\r\n        [page, setPage] = useState(0),\r\n        [rowsPerPage, setRowsPerPage] = useState(10),\r\n        [isFormValid, setIsFormValid] = useState(false),\r\n        [license, setLicense] = useState(\"\"),\r\n        [startDate, setStartDate] = useState(\"\"),\r\n        [endDate, setEndDate] = useState(\"\"),\r\n        vehicleOperations = useSelector(state => state.vehicleOperations),\r\n        dispatch = useDispatch(),\r\n        classes = useStyles();\r\n\r\n\r\n  \r\n    useEffect(() => {\r\n      dispatch(retriveAllVehicleActivity());\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n      };\r\n\r\n      const onChangeLicense = e => {\r\n        const license = e.target.value;\r\n        setLicense(license);\r\n      }\r\n\r\n      const onChangeStartDate = e => {\r\n        const startDate = e.target.value;\r\n        setStartDate(startDate);\r\n      };\r\n\r\n      const onChangeEndDate = e => {\r\n        const endDate = e.target.value;\r\n        setEndDate(endDate);\r\n      };\r\n\r\n    const searchVehicleActivity = () => {\r\n        if(license !== \"\" && startDate !== \"\" && endDate !== \"\") {\r\n            setIsFormValid(false);\r\n            dispatch(retriveVehicleActivityByLicAndDate(license, startDate, endDate));\r\n        } else {\r\n            setIsFormValid(true);\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" color=\"inherit\">Vehicle Activity</Typography>\r\n            <form className={classes.form} noValidate>\r\n            <TextField \r\n                error={isFormValid}\r\n                id=\"standard-input\" \r\n                label=\"License Number\" \r\n                name=\"license\"\r\n                className={classes.textField}\r\n                value={license}\r\n                onChange={onChangeLicense}\r\n            />\r\n            <TextField\r\n                error={isFormValid}\r\n                id=\"date\"\r\n                name=\"startDate\"\r\n                label=\"Start Date\"\r\n                type=\"date\"\r\n                className={classes.textField}\r\n                value={startDate}\r\n                onChange={onChangeStartDate}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                error={isFormValid}\r\n                id=\"date\"\r\n                name=\"endDate\"\r\n                label=\"End Date\"\r\n                type=\"date\"\r\n                className={classes.textField}\r\n                value={endDate}\r\n                onChange={onChangeEndDate}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <Button name=\"search-button\" variant=\"contained\" color=\"primary\" className = { classes.button } onClick={searchVehicleActivity}>Search</Button>\r\n            </form>\r\n            <Paper className = { classes.container }>\r\n                <TableContainer className= { classes.root }>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                        {columns.map((column) => (\r\n                            <TableCell\r\n                            className = { classes.cells }\r\n                            key={column.id}\r\n                            align={ column.align }\r\n                            style={{ minWidth: column.minWidth }}\r\n                            >\r\n                            {column.label}\r\n                            </TableCell>\r\n                        ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {vehicleOperations.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((vehicleOperation, index) => {\r\n                        return (\r\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={vehicleOperation.id}>\r\n                            {columns.map((column) => {\r\n                                const value = vehicleOperation[column.id];\r\n                                return (\r\n                                <TableCell  className = { classes.cells } key = { column.id} align = { column.align }>\r\n                                    { value }\r\n                                </TableCell>\r\n                                );\r\n                            })}\r\n                            </TableRow>\r\n                        );\r\n                        })}\r\n                    </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={vehicleOperations.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VehicleActivity;\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { Container, AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport Header from '../components/Header/Header';\r\nimport Home from '../components/Home/Home';\r\nimport PlaceInteraction from '../components/PlaceInteractions/PlaceInteraction';\r\nimport VehicleActivity from '../components/VehicleActivity/VehicleActivity';\r\n\r\nconst Router = () => {\r\n    return (\r\n    <BrowserRouter>\r\n        <Header />\r\n        <Container className=\"page-content\">\r\n            <Switch>\r\n                <Route exact path=\"/\" component = { Home } />\r\n                <Route exact path=\"/place_interactions/\" component = { PlaceInteraction } />\r\n                <Route exact path=\"/vehicle_activity/\" component = { VehicleActivity } />\r\n            </Switch>\r\n        </Container>\r\n    </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Router;","import React from 'react';\nimport './App.scss';\nimport Home from './components/Home/Home';\nimport Header from './components/Header/Header';\nimport Router from './router/Router';\n//import PlaceInteraction from './components/PlaceInteractions/PlaceInteraction';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    RETRIEVE_ALL_VEHICLE_INTERACTIONS,\r\n    RETRIEVE_VEHICLE_INTERACTIONS_BY_DATE,\r\n    RETRIEVE_ALL_VEHICLE_ACTIVITY,\r\n    RETRIEVE_VEHICLE_ACTIVITY_LIC_AND_DATE\r\n} from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nfunction vehicleOperationReducer(vehicleOperation = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case RETRIEVE_ALL_VEHICLE_INTERACTIONS:\r\n            return payload;\r\n\r\n        case RETRIEVE_VEHICLE_INTERACTIONS_BY_DATE:\r\n            return payload;\r\n        \r\n        case RETRIEVE_ALL_VEHICLE_ACTIVITY:\r\n            return payload;\r\n\r\n        case RETRIEVE_VEHICLE_ACTIVITY_LIC_AND_DATE:\r\n            return payload;\r\n\r\n        default:\r\n            return vehicleOperation;\r\n    }\r\n}\r\n\r\nexport default vehicleOperationReducer;","import { combineReducers } from \"redux\";\r\nimport vehicleOperations from \"./vehicle-operations\";\r\n\r\nexport default combineReducers({\r\n   vehicleOperations,\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}